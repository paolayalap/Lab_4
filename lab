; Archivo: interrupción.s
    ; Dispositivo: PIC16F887
    ; Autora: Paola Andrea Ayala Pineda
    ; Compilador: pic-as (v2.30), MPLAB VS.40
    
    ; Programa: Presionar RB0 o RB7 para inc o dec usando interrupción
    ; Hardware: Push en RB0 y RB1
    
    ; Creado: 14 de febrero 2022
    ; Última modificación: 14 de febrero 2022
    
    PROCESSOR 16F887
#include <xc.inc>
    
;configuration word 1
 CONFIG FOSC=INTRC_NOCLKOUT  // Oscillador Interno sin salidas
 CONFIG WDTE=OFF    // WDT disabled (reinicio repetitivo del pic)
 CONFIG PWRTE=ON    // PWRT enabled (espera de 72ms al iniciar)
 CONFIG MCLRE=OFF   // El pin de MCLR se utiliza como I/O
 CONFIG CP=OFF	    // Sin protección de código 
 CONFIG CPD=OFF	    // Sin protección de datos
 
 CONFIG BOREN=OFF   // Sin reinicio cuando el voltaje de alimentación baja de 4V
 CONFIG IESO=OFF    // Reinicio sin cambio de reloj de interno a externo
 CONFIG FCMEN=OFF   // Cambio de reloj externo a interno en caso de fallo
 CONFIG LVP=ON	    // Programación en bajo voltaje permitida
 
;configuration word 2
 CONFIG WRT=OFF	    // Protección de autoescritura por el programa desactivada
 CONFIG BOR4V=BOR40V	// Reinicio abajo de 4V, (BOR21V=2.1V)

 
 restart_tmr0 macro
    banksel PORTA
    movlw 61 ; t_deseado = (4*t_osc)(256-tmr0)(prescaler)
    movwf TMR0 ;ciclo de 50ms
    bcf	T0IF
    endm
 
 ;UP	EQU 0
 ;DOWN	EQU 7
	
 PSECT udata_bank0 ; common memory
    cont: DS 2; 2 byte
    
 PSECT udata_shr ; common memory
    W_TEMP: DS 1 ; 1 byte
    STATUS_TEMP: DS 1 ; 1 byte
 
 PSECT resVect, class=CODE, abs, delta=2
 ;----------vector reset-----------
 ORG 00h    ; posición 0000h para el reset
 resetVec:
    PAGESEL main
    goto main
    
PSECT intVect, class=CODE, abs, delta=2
;-----------interrupt vector----------
ORG 04h	    ; posición 0004h para las interrupciones
push:
    movwf   W_TEMP
    swapf   STATUS, W
    movwf   STATUS_TEMP
    
isr:
    btfsc   RBIF
    call    int_iocb
    
    btfsc   T0IF
    call    int_t0
    
pop:
    swapf   STATUS_TEMP, W
    swapf   STATUS
    swapf   W_TEMP, F
    swapf   W_TEMP, W
    retfie
    
;------subrutinas de interrupción-------
int_iocb:
    banksel PORTB
    btfss   PORTB, 0
    incf    PORTA
    btfss   PORTB, 7
    decf    PORTA
    bcf	    RBIF
    
    return


int_t0:
    restart_tmr0    ; 50ms
    incf cont
    movf cont, W
    sublw 20
    btfss ZERO ; STATUS, 2
    goto  return_t0
    clrf  cont ; 500ms
    incf  PORTC
    
 return_t0:
    return
    
 PSECT code, delta=2, abs
 ORG 100h   ; posición para el código
 
 ;-------configuración----------
 main:
    call config_io	; PORTA out, RB7 y RB0 como input
    call config_reloj   ; 4MHz
    call config_tmr0
    call config_iocrb
    call config_int_enable
    banksel PORTA
    
 ;-----------loop principal------------
 loop:
    
    
    goto loop	    ; loop forever
    
 ;--------sub rutinas-----------
 config_iocrb:
    banksel TRISA
    bsf	    IOCB, 0
    bsf	    IOCB, 7
    
    banksel PORTA
    movf    PORTB, W	; al leer termina condición de mismatch
    bcf	    RBIF
    return
 
 config_io:
    bsf	    STATUS, 5  ; banco 11
    bsf	    STATUS, 6
    clrf    ANSEL      ; pines digitales
    clrf    ANSELH 
    
    bsf	    STATUS, 5  ; banco 01
    bcf	    STATUS, 6
    bsf	    TRISB, 0	; UP y DOWN como entradas
    bsf	    TRISB, 7
    bcf	    TRISA, 0	; port A como salida
    bcf	    TRISA, 1
    bcf	    TRISA, 2
    bcf	    TRISA, 3
    bcf	    TRISC, 0	; port C como salida
    bcf	    TRISC, 1
    bcf	    TRISC, 2
    bcf	    TRISC, 3
    
    bcf	    OPTION_REG, 7 ; habilitar pull up
    bsf	    WPUB, 0
    bsf	    WPUB, 7
    
    bcf	    STATUS, 5	; banco 00
    bcf	    STATUS, 6	
    clrf    PORTA
    clrf    PORTC
    return
    
 config_reloj:
    banksel OSCCON
    bsf	    IRCF2   ; OSCCON, 6
    bsf	    IRCF1   ; OSCCON, 5
    bcf	    IRCF0   ; OSCCON, 4
    bsf	    SCS	    ; reloj interno 4MHz
    return
    
    
config_tmr0:
    banksel TRISA
    ; configurar OPTION_REG
    bcf	    T0CS
    bcf	    PSA
    bsf	    PS2 ;256
    bsf	    PS1
    bsf	    PS0
    restart_tmr0
    return
    
    
config_int_enable:
    bsf	    GIE	    ; INTCON
    bsf	    RBIE
    bcf	    RBIF
    bsf	    T0IE
    bcf	    T0IF
    return
    
     
END 




